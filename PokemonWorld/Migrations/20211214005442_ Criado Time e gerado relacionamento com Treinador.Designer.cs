// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonWorld.Data;

namespace PokemonWorld.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211214005442_ Criado Time e gerado relacionamento com Treinador")]
    partial class CriadoTimeegeradorelacionamentocomTreinador
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("PokemonWorld.Models.Atributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ataque")
                        .HasColumnType("int");

                    b.Property<int>("Defesa")
                        .HasColumnType("int");

                    b.Property<int>("EspecialAtaque")
                        .HasColumnType("int");

                    b.Property<int>("EspecialDefesa")
                        .HasColumnType("int");

                    b.Property<int>("Velocidade")
                        .HasColumnType("int");

                    b.Property<int>("Vida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Atributos");
                });

            modelBuilder.Entity("PokemonWorld.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtributoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AtributoId")
                        .IsUnique();

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PokemonWorld.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_1")
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_2")
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_3")
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_4")
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_5")
                        .HasColumnType("int");

                    b.Property<int>("Pokemon_6")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("PokemonWorld.Models.Treinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TimeId")
                        .IsUnique();

                    b.ToTable("Treinadores");
                });

            modelBuilder.Entity("PokemonWorld.Models.Pokemon", b =>
                {
                    b.HasOne("PokemonWorld.Models.Atributo", "Atributo")
                        .WithOne("Pokemon")
                        .HasForeignKey("PokemonWorld.Models.Pokemon", "AtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atributo");
                });

            modelBuilder.Entity("PokemonWorld.Models.Treinador", b =>
                {
                    b.HasOne("PokemonWorld.Models.Time", "Time")
                        .WithOne("Treinador")
                        .HasForeignKey("PokemonWorld.Models.Treinador", "TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("PokemonWorld.Models.Atributo", b =>
                {
                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonWorld.Models.Time", b =>
                {
                    b.Navigation("Treinador")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
